<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sonhaenono.member.mapper.MemberMapper">

	<resultMap type="memberDto" id="member_full">
		<id column="id" property="id" />
		<result column="password" property="password" />
		<result column="name" property="name"/>
		<result column="phone" property="phone"/>
		<result column="email" property="email" />
		<result column="join_date" property="joinDate"/>
		<result column="updated_date" property="updatedDate"/>
		<result column="type" property="type" typeHandler="com.sonhaenono.member.type.EnumMemberTypeHandler"/>
	</resultMap>
	
	<!-- 회원가입 -->
	
	<insert id="joinMember" parameterType="memberDto">
		insert into members
		(id, password, name, type, phone, email) values
		(#{id}, #{password}, #{name}, #{type, typeHandler=com.sonhaenono.member.type.EnumMemberTypeHandler}, #{phone}, #{email})
	</insert>
	
	<!-- 로그인 처리 -->
	
	<resultMap type="memberDto" id="member_light">
		<id column="id" property="id" />
		<result column="password" property="password" />
		<result column="name" property="name"/>
		<result column="type" property="type" typeHandler="com.sonhaenono.member.type.EnumMemberTypeHandler"/>
	</resultMap>
	
	<select id="loginMember" parameterType="map" resultMap="member_light">
		select id, password, name, type
		from members
		where id = #{id} and password = #{password}
	</select>
	
	<select id="getMembers" resultMap="member_full">
		select * from members;
	</select>
	<!-- 아이디로 계정 조회 -->
	<select id="getMemberById" parameterType="string" resultMap="member_full">
		select * from members where id = #{id}
	</select>
	
	<!--  아이디 중복 체크 -->
	<select id="existMemberId" parameterType="string" resultType="int">
		select count(id)
		from members
		where id=#{id}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<!-- <parameterMap type="map" id="findPasswordQuery">
		<parameter property="id" />
		<parameter property="name" />
		<parameter property="phone" />
	</parameterMap>
	 -->
	<select id="findPassword" parameterType="map" resultType="string">
		select password
		from members
		where id=#{id} and name=#{name} and phone=#{phone}
	</select>
	
	<!-- 비밀번호 변경 -->
	<!-- <parameterMap type="map" id="changePasswordQuery">
		<parameter property="id" />
		<parameter property="old_password" />
		<parameter property="new_password" />
	</parameterMap>
	 -->
	<update id="changePassword" parameterType="map">
		update members 
		set password = #{new_password}
		where id=#{id} and password=#{old_password}
	</update>
	
	<!-- 유저 정보 변경 -->
	<!-- <parameterMap type="map" id="chageInfo">
		<parameter property="id" />
		<parameter property="name" />
		<parameter property="phone" />
		<parameter property="email" />
	</parameterMap>
	 -->
	<update id="changeInfo" parameterType="map">
		update members
		set name=#{name}, phone=#{phone}, email=#{email}
		where id=#{id}
	</update>
	<!-- 유저 타입 변경 -->
	<update id="changeType" parameterType="map">
		update members
		set type = #{type}
		where id=#{id}
	</update>
	
	<!-- 유저 관심 지역 조회 -->
	<select id="getFavoriteRegions" parameterType="string" resultType="string">
		select dongCode
		from member_favorite_region
		where member_id= #{id}
	</select>
	
	<!-- 유저 관심 지역 추가 -->
	<insert id="addFavoriteRegions" parameterType="memberFavoriteRegion">
		insert into member_favorite_region
		(member_id, dongCode) values
		<foreach collection="dongCodes" item="dongCode" separator=",">
			(#{memberId}, #{dongCode})
		</foreach>
	</insert>
	<!-- 유저 관심 지역 삭제 -->
	<delete id="removeFavoriteRegions" parameterType="memberFavoriteRegion">
		delete from member_favorite_region where member_id = #{memberId} and dongCode in 
		<foreach collection="dongCodes" item="dongCode" separator="," open="(" close=")" >
			#{dongCode}
		</foreach>
	</delete>
</mapper>